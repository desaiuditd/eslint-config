module.exports = {
	env: {
		browser: true,
		es2022: true,
		jest: true,
		node: true,
	},
	extends: [
		'eslint:recommended',
		'plugin:import/errors',
		'plugin:import/warnings',
		'plugin:@wordpress/eslint-plugin/i18n',
	],
	overrides: [
		{
			files: [
				'.eslintrc.js',
			],
			rules: { 'import/no-commonjs': 'off' },
		},
	],
	parser: '@typescript-eslint/parser',
	plugins: [
		'sort-keys-fix',
	],
	rules: {
		'@wordpress/i18n-text-domain': [ 'error' ],
		'array-bracket-spacing': [ 'error', 'always' ],
		'arrow-parens': [ 'error', 'as-needed' ],
		'arrow-spacing': [ 'error', { after: true, before: true } ],
		'block-spacing': [ 'error' ],
		'brace-style': [ 'error', '1tbs' ],
		'comma-dangle': [ 'error', 'always-multiline' ],
		'comma-spacing': [ 'error', { after: true, before: false } ],
		'computed-property-spacing': [ 'error', 'always' ],
		curly: [ 'error', 'all' ],
		'dot-notation': [ 'error' ],
		'eol-last': [ 'error', 'unix' ],
		eqeqeq: [ 'error' ],
		'func-call-spacing': [ 'error' ],
		'import/newline-after-import': [ 'error' ],
		'import/no-amd': [ 'error' ],
		'import/no-commonjs': [ 'error' ],
		'import/no-default-export': [ 'error' ],
		'import/no-unresolved': [ 'error' ],
		'import/order': [
			'error',
			{
				alphabetize: { order: 'asc' },
				groups: [
					'builtin',
					'external',
					'internal',
					'parent',
					'sibling',
					'index',
					'object',
					'type',
					'unknown',
				],
				'newlines-between': 'always',
			},
		],
		indent: [ 'error', 'tab', { SwitchCase: 1 } ],
		'key-spacing': [ 'error', { mode: 'minimum' } ],
		'keyword-spacing': [ 'error', { after: true, before: true } ],
		'linebreak-style': [ 'error', 'unix' ],
		'lines-around-comment': [ 'error', {
			allowArrayStart: true,
			allowBlockStart: true,
			allowClassStart: true,
			allowObjectStart: true,
			beforeBlockComment: true,
			beforeLineComment: true,
		} ],
		'max-len': [ 'warn', { code: 120 } ],
		'no-console': [ 'error', { allow: [ 'warn', 'error' ] } ],
		'no-mixed-spaces-and-tabs': [ 'error' ],
		'no-multi-spaces': [
			'error',
			{
				exceptions: {
					AssignmentExpression: true,
					AssignmentPattern: true,
					VariableDeclaration: true,
					VariableDeclarator: true,
				},
				ignoreEOLComments: true,
			},
		],
		'no-multiple-empty-lines': [ 'error', { max: 1 } ],
		'no-return-assign': [ 'error', 'always' ],
		'no-trailing-spaces': [ 'error' ],
		'no-unused-expressions': 'off',
		'no-unused-vars': [
			'error',
			{
				args: 'none',
				caughtErrors: 'all',
				ignoreRestSiblings: true,
				vars: 'local',
			},
		],
		'no-useless-concat': 'error',
		'no-var': 'error',
		'object-curly-newline': [ 'error', { multiline: true } ],
		'object-curly-spacing': [ 'error', 'always' ],
		'object-property-newline': [ 'error', { allowAllPropertiesOnSameLine: true } ],
		'object-shorthand': [ 'error', 'always' ],
		'one-var': [ 'error', 'never' ],
		'prefer-const': 'error',
		'prefer-object-spread': 'error',
		'prefer-template': 'error',
		'quote-props': [ 'error', 'as-needed' ],
		quotes: [ 'error', 'single' ],
		semi: [ 'error', 'always' ],
		'semi-spacing': [ 'error', { after: true, before: false } ],
		'sort-imports': 'off',
		'sort-keys-fix/sort-keys-fix': 'error',
		'space-before-blocks': [ 'error', 'always' ],
		'space-before-function-paren': [
			'error',
			{
				anonymous: 'always',
				asyncArrow: 'always',
				named: 'never',
			},
		],
		'space-in-parens': [ 'error', 'always', { exceptions: [ 'empty' ] } ],
		'space-infix-ops': [ 'error' ],
		'space-unary-ops': [
			'error',
			{
				nonwords: true,
				overrides: {
					'++': false,
					'--': false,
				},
				words: true,
			},
		],
		'spaced-comment': [
			'error',
			'always',
			{
				block: { balanced: true },
				markers: [ '/' ],
			},
		],
		'template-curly-spacing': [ 'error', 'always' ],
		yoda: [ 'error', 'never', { exceptRange: true } ],
	},
};
